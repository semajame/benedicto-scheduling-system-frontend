{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/common\";\nfunction VerifyEmailComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verifying... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyEmailComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Verification failed, you can also verify your account using the \");\n    i0.ɵɵelementStart(2, \"a\", 3);\n    i0.ɵɵtext(3, \"forgot password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" page. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar EmailStatus = /*#__PURE__*/function (EmailStatus) {\n  EmailStatus[EmailStatus[\"Verifying\"] = 0] = \"Verifying\";\n  EmailStatus[EmailStatus[\"Failed\"] = 1] = \"Failed\";\n  return EmailStatus;\n}(EmailStatus || {});\nexport let VerifyEmailComponent = /*#__PURE__*/(() => {\n  class VerifyEmailComponent {\n    constructor(route, router, accountService, alertService) {\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.EmailStatus = EmailStatus;\n      this.emailStatus = EmailStatus.Verifying;\n    }\n    ngOnInit() {\n      const token = this.route.snapshot.queryParams['token'];\n      // remove token from url to prevent http referer leakage\n      this.router.navigate([], {\n        relativeTo: this.route,\n        replaceUrl: true\n      });\n      this.accountService.verifyEmail(token).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Verification successful, you can now login', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../login'], {\n            relativeTo: this.route\n          });\n        },\n        error: () => {\n          this.emailStatus = EmailStatus.Failed;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function VerifyEmailComponent_Factory(t) {\n      return new (t || VerifyEmailComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AccountService), i0.ɵɵdirectiveInject(i2.AlertService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VerifyEmailComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"card-header\"], [1, \"card-body\"], [4, \"ngIf\"], [\"routerLink\", \"forgot-password\"]],\n      template: function VerifyEmailComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\", 0);\n          i0.ɵɵtext(1, \"Verify Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵtemplate(3, VerifyEmailComponent_div_3_Template, 2, 0, \"div\", 2)(4, VerifyEmailComponent_div_4_Template, 5, 0, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Verifying);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.emailStatus == ctx.EmailStatus.Failed);\n        }\n      },\n      dependencies: [i3.NgIf, i1.RouterLink],\n      encapsulation: 2\n    });\n  }\n  return VerifyEmailComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}